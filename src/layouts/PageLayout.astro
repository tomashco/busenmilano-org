---
import Layout from '~/layouts/BaseLayout.astro';
import Header from '~/components/widgets/Header.astro';
import Footer from '~/components/widgets/Footer.astro';

import { headerData, footerData } from '~/data';

import { MetaSEO } from '~/types';
import { Picture } from '@astrojs/image/components';

interface articleProps {
  title: string;
  href: string | any;
  image: {
    src: string | any;
    alt: string;
  };
}
export interface Props {
  meta?: MetaSEO;
  pageTitle: string;
  pageDescription?: string;
  articles?: articleProps[];
  pageImage?: string | any;

  links?: { title: string; href: string }[];
}

const {
  meta,
  pageTitle,
  pageImage = await Astro.slots.render('image'),
  pageDescription,
  articles = [],
  links,
} = Astro.props;

const { slug } = Astro.params;
---

<Layout {meta}>
  <slot name="header">
    <Header {...headerData} showRssFeed showToggleTheme />
  </slot>
  <main>
    <div class="flex flex-col mx-auto align-middle max-w-[45rem] px-10">
      <slot name="page-title">
        {pageTitle && <h1 class="text-3xl py-6">{pageTitle}</h1>}
      </slot>
      <slot name="page-image">
        <Picture
          class="mx-auto pb-6 rounded-md"
          widths={[400, 768, 1024, 2040]}
          sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
          aspectRatio={730 / 370}
          loading="eager"
          width={730}
          height={370}
          {...pageImage}
        />
      </slot>
      <slot />
      {pageDescription && <slot set:html={pageDescription} name="page-description" />}
      {
        links && (
          <slot>
            <ul />
            {links.map(({ title, href }) => (
              <li>
                <a href={slug + href}>{title}</a>
              </li>
            ))}
          </slot>
        )
      }

      <!-- {pageDescription &&  dangerouslySetInnerHtml={{ _content: pageDescription }} />} -->
      <!-- </slot> -->
      <slot name="articles">
        {
          articles &&
            articles.map(async ({ title, href, image }: articleProps) => (
              <li class="flex p-6 hover:bg-[#e1e1e1]">
                <Picture
                  class="rounded-md"
                  widths={[100]}
                  sizes="150px"
                  aspectRatio={1 / 1}
                  loading="eager"
                  width={150}
                  height={150}
                  {...image}
                />
                <a class="px-6 pt-3 text-lg italic font-serif hover:text-[#cf2e2e]" href={href}>
                  {title}
                </a>
              </li>
            ))
        }
      </slot>
    </div>
  </main>
</Layout>
<slot name="footer">
  <Footer {...footerData} />
</slot>
